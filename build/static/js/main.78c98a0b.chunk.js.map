{"version":3,"sources":["styles/ContentBorderStyle.module.scss","styles/DashBoard.module.scss","contexts/ThemeContextProvider.js","contexts/ServiceContextProvider.js","components/ContentColor.js","components/DisplayBoard.js","components/ContentBorderColor.js","components/ContentSize.js","components/ContentBorderSize.js","components/ContentTextAlign.js","components/ContentBorderStyle.js","components/Reset.js","components/ResultTable.js","components/ToggleTheme.js","components/DashBoard.js","components/MyApp.js","App.js","reportWebVitals.js","index.js","styles/ContentSize.module.scss","styles/ContentBorderSize.module.scss","styles/ContentColor.module.scss","styles/ContentBorderColor.module.scss","styles/ContentTextAlign.module.scss","styles/Result.module.scss","styles/Reset.module.scss","styles/ResultTable.module.scss","styles/MyApp.module.scss"],"names":["module","exports","ThemeContext","React","createContext","ThemeContextProvider","props","useState","isTheme","Theme","setTheme","ThemeContextProviderData","onSetTheme","Provider","value","children","ServiceContext","ServiceContextProvider","color","size","border","border_width","border_color","border_style","isCategory","default","multiples","text_align","valueDefault","setValueDefault","ServiceContextProviderData","useCallback","setColorContent","params","prestate","setBorderColor","setSizeContent","sum","setBorderSize","setTextAlign","setBorderStyle","setBorderStyleType","resetValue","memo","ContentColor","className","useContext","styles","pannel","pannel_black","arrayColor","useMemo","setStyle","width","height","borderStyle","borderColor","backgroundColor","element","map","index","style","button_color","onClick","handleOnClick","title","content","useStylesDefault","makeStyles","bar","fontSize","textAlign","useStylesMultiples","borderWidth","join","DisplayBoard","stylesDefault_material","stylesMultiples_material","ContentBorderColor","ContentSize","button_control","ContentBorderSize","ContentTextAlign","arrayTextAlign","ContentBorderStyle","array","arrayDefault","includes","i","length","splice","push","handleOnClickType","bt","Reset","button","button_black","defaultValue","ResultTable","refs","useRef","bt_coppy_clipboard","bt_coppy_clipboard_black","col_12","id","ref","pd_5","property","document","selection","range","body","createTextRange","moveToElementText","getElementById","select","execCommand","window","getSelection","createRange","selectNode","removeAllRanges","addRange","handleOnclick","ToggleTheme","setValue","verticalAlign","icon","faSun","type","max","step","onChange","e","target","faMoon","Dashboard","row","col_6","col_3","row_center","MyApp","myApp","myApp_black","reftop","refBox","refDashBoard","refDragBar_1","refDragBar_2","refDisplayBoard","clientHeightRowFirst","setClientHeightRowFirst","clientHeightRowSecond","setClientHeightRowSecond","clientHeightRowThirst","setClientHeightRowThirst","clientMaxHeightRowTop","setClientMaxHeightRowTop","isDragBarFirst","setIsDragBarFirst","isDragBarSecond","setIsDragBarSecond","cursor","SetCursor","handleOnMouseDown","isDragBar","endDrag","removeEventListener","onDrag","heightRowSecond","current","clientHeight","clientY","heightRowFirst","preventDefault","heightMaxRowTop","heightRowThirst","useEffect","addEventListener","console","log","box_resize","maxHeight","rowtop","isNullableTypeAnnotation","dashboard","container","onMouseDown","dragbar_height_1","result_table","dragbar_height_2","display_board","service","col","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.78c98a0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel_black\":\"ContentBorderStyle_pannel_black__3O3_E\",\"title\":\"ContentBorderStyle_title__2Zmll\",\"bt\":\"ContentBorderStyle_bt__2OfCi\",\"content\":\"ContentBorderStyle_content__18Kj3\",\"button_control\":\"ContentBorderStyle_button_control__3Aj4E\",\"pannel\":\"ContentBorderStyle_pannel__2vgmO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"DashBoard_row__3Zybx\",\"row_center\":\"DashBoard_row_center__1QwqO\",\"col_6\":\"DashBoard_col_6__3qJcQ\",\"col_4\":\"DashBoard_col_4__1_R8E\",\"col_3\":\"DashBoard_col_3__3fj_q\",\"col\":\"DashBoard_col__bvQNk\"};","import React, { useState } from 'react'\r\n\r\nexport const ThemeContext  = React.createContext();\r\n\r\nconst ThemeContextProvider = (props) =>{\r\n\r\n    const [Theme,setTheme] = useState({\r\n        isTheme : true,\r\n    })    \r\n\r\n    const onSetTheme = () =>{\r\n        setTheme({\r\n            isTheme:!Theme.isTheme,\r\n        })\r\n    }\r\n\r\n    const ThemeContextProviderData = {\r\n        Theme,\r\n        onSetTheme,\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider\r\n            value={ThemeContextProviderData}\r\n        >\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default ThemeContextProvider","import React, { useCallback, useState } from 'react'\r\n\r\nexport const ServiceContext = React.createContext();\r\n\r\nconst ServiceContextProvider = (props) => {\r\n\r\n    const [valueDefault,setValueDefault] = useState({\r\n        color:'black',\r\n        size: 1,\r\n        border : {\r\n            border_width : 1,\r\n            border_color : 'black',\r\n            border_style :  {\r\n                isCategory : true,\r\n                default: 'solid',\r\n                multiples : [  \r\n                'solid' ,\r\n                'double' ,\r\n                'none' ,\r\n                'hidden' ,],\r\n            }\r\n        },\r\n        text_align : 'left'\r\n    })\r\n\r\n\r\n    const setColorContent = (params) => {\r\n        setValueDefault((prestate) =>({\r\n            ...prestate,\r\n            color : params\r\n        }))\r\n    }\r\n    \r\n    const setBorderColor = (params) => {\r\n        setValueDefault((prestate) => ({\r\n            ...prestate,\r\n            border:{\r\n            ...prestate.border,\r\n            border_color : params,\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n    const setSizeContent = (params) => {\r\n    let sum = params + valueDefault.size;\r\n    if(sum >= 1 && sum <= 8){\r\n        setValueDefault((prestate) => ({\r\n        ...prestate,\r\n        size : sum\r\n        }))\r\n    }\r\n    }\r\n\r\n    const setBorderSize = (params)=>{\r\n    let sum = params + valueDefault.border.border_width;\r\n    if(sum >= 1 && sum <= 8){\r\n        setValueDefault((prestate) => ({\r\n        ...prestate,\r\n        border : {\r\n            ...prestate.border,\r\n            border_width : sum,\r\n        }\r\n        }))\r\n    }\r\n    }\r\n\r\n    const setTextAlign = (params) =>{\r\n        setValueDefault((prestate) => ({\r\n        ...prestate,\r\n        text_align:params\r\n    }))\r\n    }\r\n\r\n    const setBorderStyle = (params) => {\r\n    if(valueDefault.border.border_style.isCategory){\r\n        setValueDefault((prestate) => ({\r\n        ...prestate,\r\n        border: {\r\n            ...prestate.border,\r\n            border_style : {\r\n                ...prestate.border.border_style,\r\n                default : params\r\n            }\r\n        }\r\n        }))\r\n    }else{\r\n        setValueDefault((prestate) => ({\r\n        ...prestate,\r\n        border: {\r\n            ...prestate.border,\r\n            border_style : {\r\n                ...prestate.border.border_style,\r\n                multiples : params\r\n            }\r\n        }\r\n        }))\r\n    }\r\n    }\r\n\r\n    const setBorderStyleType = (params) => {\r\n        setValueDefault((prestate) => ({\r\n        ...prestate,\r\n        border: {\r\n            ...prestate.border,\r\n            border_style : {\r\n            ...prestate.border.border_style,\r\n            isCategory : params,\r\n            }\r\n        }\r\n    }))\r\n    }\r\n\r\n    const resetValue = (params) => {\r\n        setValueDefault(params)\r\n    }\r\n\r\n\r\n    const ServiceContextProviderData = useCallback({\r\n        valueDefault,\r\n        setColorContent,\r\n        setBorderColor,\r\n        setSizeContent,\r\n        setBorderSize,\r\n        setTextAlign,\r\n        setBorderStyle,\r\n        setBorderStyleType,\r\n        resetValue,\r\n    },)\r\n\r\n    return (\r\n        <ServiceContext.Provider\r\n            value = {ServiceContextProviderData}\r\n        >\r\n            {props.children}\r\n        </ServiceContext.Provider>\r\n    )\r\n}\r\n\r\nexport default React.memo(ServiceContextProvider)","import React,{useContext, useMemo} from 'react'\r\nimport styles from '../styles/ContentColor.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport { ServiceContext } from '../contexts/ServiceContextProvider'\r\nconst ContentColor = (props) => {\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.pannel:styles.pannel_black\r\n\r\n    \r\n    const {setColorContent} = useContext(ServiceContext);\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    const {color} = valueDefault;\r\n\r\n    const arrayColor = [\r\n        'black',\r\n        'white',\r\n        'red',\r\n        'blue',\r\n        'pink',\r\n        'yellow',\r\n        'gray',\r\n        'green',\r\n        'brown',\r\n    ]\r\n\r\n    return useMemo(()=>{\r\n        const handleOnClick=(value) => {\r\n            setColorContent(value);\r\n        }\r\n    \r\n       \r\n        const setStyle = (value) => {\r\n            if(value === color){\r\n                return ({\r\n                    width : '110px',\r\n                    height:'110px',\r\n                    border: '5px',\r\n                    borderStyle: 'solid',\r\n                    borderColor:'#94bbe9',\r\n                    backgroundColor : value,\r\n                })\r\n                }\r\n            return ({\r\n                backgroundColor : value,\r\n            })\r\n        }\r\n    \r\n        let element = arrayColor.map((value,index)=>{\r\n            return (\r\n               <button\r\n                 key={index}\r\n                 style ={setStyle(value)}\r\n                 className={styles.button_color}\r\n                 onClick={()=>handleOnClick(value)}\r\n               >\r\n    \r\n               </button>\r\n            )\r\n        })\r\n    \r\n        return (\r\n            <div className={className}>\r\n                <div className={styles.title}>\r\n                    <span >color : {color}</span>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    {element}\r\n                </div>\r\n            </div>\r\n        )\r\n    },[className,color])\r\n   \r\n}\r\n\r\nexport default ContentColor","import React , {useContext, useMemo} from 'react'\r\nimport styles from '../styles/Result.module.scss'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ServiceContext } from '../contexts/ServiceContextProvider';\r\n\r\n\r\nconst useStylesDefault = makeStyles({\r\n    bar: valueDefault => ({\r\n      color: valueDefault.color,\r\n      fontSize : valueDefault.size+'rem',\r\n      border: valueDefault.border.border_width+'px '+valueDefault.border.border_style.default + ' ' +valueDefault.border.border_color,\r\n      textAlign: valueDefault.text_align\r\n    }),\r\n  });\r\n \r\nconst useStylesMultiples = makeStyles({\r\n  bar: valueDefault => ({\r\n    color: valueDefault.color,\r\n    fontSize : valueDefault.size+'rem',\r\n    borderWidth: valueDefault.border.border_width+'px',\r\n    borderColor: valueDefault.border.border_color,\r\n    borderStyle: valueDefault.border.border_style.multiples.join(' '),\r\n    textAlign: valueDefault.text_align,\r\n  }),\r\n});\r\n\r\nconst DisplayBoard = () => {\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    let  stylesDefault_material = useStylesDefault(valueDefault);\r\n    let  stylesMultiples_material = useStylesMultiples(valueDefault);\r\n    return useMemo(()=>{\r\n      const setClass = () => {\r\n        if(valueDefault.border.border_style.isCategory){\r\n          return stylesDefault_material\r\n        }else{\r\n          return stylesMultiples_material\r\n        }\r\n      } \r\n      return (\r\n      <div className={styles.pannel}>\r\n          <div className={styles.content}\r\n          >\r\n              <div className={setClass().bar}>\r\n                 Content\r\n              </div>\r\n          </div>\r\n      </div>\r\n      )\r\n    },[valueDefault])\r\n   \r\n}\r\n\r\n\r\nexport default  DisplayBoard","import React, { useContext , useCallback, useMemo } from 'react'\r\nimport styles from '../styles/ContentBorderColor.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport { ServiceContext } from '../contexts/ServiceContextProvider'\r\n\r\nconst ContentBorderColor = () => {\r\n\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.pannel:styles.pannel_black\r\n\r\n    const {setBorderColor} = useContext(ServiceContext);\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    const  border_color = valueDefault.border.border_color;\r\n\r\n    const arrayColor = [\r\n        'black',\r\n        'white',\r\n        'red',\r\n        'blue',\r\n        'pink',\r\n        'yellow',\r\n        'gray',\r\n        'green',\r\n        'brown',\r\n    ]\r\n\r\n return useMemo(()=>{\r\n    const handleOnClick=(value) => {\r\n        setBorderColor(value);\r\n    }\r\n   \r\n    const setStyle = (value) => {\r\n        if(value === border_color){\r\n            return ({\r\n                width : '110px',\r\n                height:'110px',\r\n                border: '5px',\r\n                borderStyle: 'solid',\r\n                borderColor:'#94bbe9',\r\n                backgroundColor : value,\r\n            })\r\n            }\r\n        return ({\r\n            backgroundColor : value,\r\n        })\r\n    }\r\n       \r\n    let element = arrayColor.map((value,index)=>{\r\n        return (\r\n           <button\r\n             key={index}\r\n             style = {setStyle(value)}\r\n             className={styles.button_color}\r\n             onClick={()=>handleOnClick(value)}\r\n           >\r\n           </button>\r\n        )\r\n    })\r\n  \r\n    return (\r\n        <div className={className}>\r\n            <div className={styles.title}>\r\n                <span >border-color : {border_color}</span>\r\n            </div>\r\n            <div className={styles.content}>\r\n                {element}\r\n            </div>\r\n        </div>\r\n    )},[border_color,className])\r\n}\r\n\r\n\r\n\r\nexport default React.memo(ContentBorderColor);","import React ,{useContext, useMemo} from 'react'\r\nimport styles from '../styles/ContentSize.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport { ServiceContext } from '../contexts/ServiceContextProvider'\r\n\r\nconst ContentSize = (props) => {\r\n\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.pannel:styles.pannel_black\r\n\r\n    \r\n    const {setSizeContent} = useContext(ServiceContext);\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    const {size} = valueDefault;\r\n\r\n    return useMemo(()=>{\r\n        const handleOnClick = (value) => {\r\n            setSizeContent(value)\r\n        }\r\n    \r\n        return (\r\n            <div className={className}>\r\n                <div className={styles.title}>\r\n                    <span>size:{size}rem</span>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <button onClick={()=>handleOnClick(1)} className={styles.button_control}>Up</button>\r\n                    <button onClick={()=>handleOnClick(-1)}  className={styles.button_control}>Down</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    },[className,size])\r\n    \r\n}\r\n\r\nexport default ContentSize ;","import React,{useContext, useMemo} from 'react'\r\nimport styles from '../styles/ContentBorderSize.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport { ServiceContext} from '../contexts/ServiceContextProvider'\r\nconst ContentBorderSize = (props) => {\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.pannel:styles.pannel_black\r\n\r\n    const  {setBorderSize} = useContext(ServiceContext);\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    const {border} = valueDefault;\r\n    const {border_width} = border;\r\n\r\n    return useMemo(()=>{\r\n        const handleOnClick = (value) => {\r\n            setBorderSize(value)\r\n        }\r\n        return (\r\n            <div className={className}>\r\n                <div className={styles.title}>\r\n                    <span>border-width: {border_width}px</span>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    <button onClick={()=>handleOnClick(1)} className={styles.button_control}>Up</button>\r\n                    <button onClick={()=>handleOnClick(-1)}  className={styles.button_control}>Down</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    },[className,border_width])\r\n   \r\n}\r\n\r\nexport default React.memo(ContentBorderSize) ;","import React ,{useCallback, useContext, useMemo} from 'react'\r\nimport styles from '../styles/ContentTextAlign.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport {ServiceContext} from '../contexts/ServiceContextProvider'\r\nconst ContentTextAlign = (props) =>{\r\n\r\n    \r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.pannel:styles.pannel_black\r\n\r\n    const {setTextAlign} = useContext(ServiceContext);\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    const {text_align} = valueDefault;\r\n\r\n\r\n    const arrayTextAlign = [\r\n        'left',\r\n        'center',\r\n        'right',\r\n    ]\r\n\r\n    return useMemo(()=>{\r\n        const handleOnClick = (value) => {\r\n            setTextAlign(value)\r\n        }\r\n        const setStyle = (value) => {\r\n            if(value === text_align){\r\n                return ({\r\n                    border: '5px',\r\n                    borderStyle: 'solid',\r\n                    borderColor:'#94bbe9',\r\n                })\r\n                }\r\n            return (null)\r\n        }\r\n    \r\n        const element = arrayTextAlign.map((value,index) =>{\r\n            return(\r\n                <button\r\n                style={setStyle(value)}\r\n                key={index}\r\n                className={styles.button_control}\r\n                onClick={()=>handleOnClick(value)}\r\n                >\r\n                    {value}\r\n                </button>\r\n            )\r\n            \r\n        })\r\n        \r\n        return (\r\n            <div className={className}>\r\n            <div className={styles.title}>\r\n                <span>text-align : {text_align}</span>\r\n            </div>\r\n            <div className={styles.content}>\r\n              {element}\r\n             </div>\r\n        </div>\r\n        )\r\n    \r\n    },[text_align,className])\r\n      \r\n   \r\n}\r\n\r\nexport default React.memo(ContentTextAlign)","import React, { useContext, useMemo} from 'react'\r\nimport styles from '../styles/ContentBorderStyle.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport { ServiceContext } from '../contexts/ServiceContextProvider'\r\nconst ContentBorderStyle = () =>{\r\n\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.pannel:styles.pannel_black\r\n\r\n    const {setBorderStyle} = useContext(ServiceContext);\r\n    const {setBorderStyleType} = useContext(ServiceContext);\r\n    const {valueDefault} = useContext(ServiceContext);\r\n    const {border} = valueDefault;\r\n    const {border_style} = border;\r\n\r\n    const array = [\r\n        'solid' ,\r\n        'double' ,\r\n        'none' ,\r\n        'hidden' ,\r\n        'dotted' ,\r\n        'groove' ,\r\n        'ridge' ,\r\n        'inset' ,\r\n        'outset' \r\n    ]\r\n    const arrayDefault = [\r\n        'solid' ,\r\n        'double' ,\r\n        'none' ,\r\n        'hidden' ,\r\n        'dotted' ,\r\n        'groove' ,\r\n        'ridge' ,\r\n        'inset' ,\r\n        'outset' \r\n    ]\r\n   \r\n   return useMemo(()=>{\r\n    const handleOnClick = (value,index) =>{\r\n        if(border_style.isCategory){\r\n            setBorderStyle(value)\r\n        }else{            \r\n            if(border_style.multiples.includes(value)){\r\n                for(var i = 0 ; i < border_style.multiples.length ; i++){\r\n                    if(border_style.multiples[i] === value){\r\n                        border_style.multiples.splice(i,1)\r\n                    }\r\n                }\r\n                setBorderStyle(border_style.multiples);\r\n            }else{\r\n                if(border_style.multiples.length < 4){\r\n                    border_style.multiples.push(value)\r\n                    setBorderStyle(border_style.multiples);\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    const handleOnClickType = (value) => {\r\n        setBorderStyleType(value)\r\n    }\r\n\r\n    const setStyle = (value) => {\r\n        if(border_style.isCategory){\r\n            if(value === border_style.default){\r\n                return ({\r\n                    border: '5px',\r\n                    borderStyle: 'solid',\r\n                    borderColor:'#94bbe9',\r\n                })\r\n            }\r\n            return (null)\r\n        }else{\r\n            if(border_style.multiples.includes(value)){\r\n                return ({\r\n                    border: '5px',\r\n                    borderStyle: 'solid',\r\n                    borderColor:'#94bbe9',\r\n                })\r\n            }\r\n            return (null)\r\n        }\r\n       \r\n    }\r\n\r\n    let element_title = () => {\r\n        if(border_style.isCategory){\r\n            return (\r\n                <span>{border_style.default}</span>                \r\n            )\r\n        }else{\r\n            return (\r\n                border_style.multiples.map((value,index)=>{\r\n                   return (<span key={index}> {value} </span>)\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    let element_Style = () => {\r\n       if(border_style.isCategory){\r\n           return  arrayDefault.map((value,index)=>{\r\n            return (\r\n                <button\r\n                style={setStyle(value)}\r\n                key={index}\r\n                className={styles.button_control}\r\n                onClick={() => handleOnClick(value,index)}>\r\n                    {value}\r\n                </button>\r\n            )\r\n        })\r\n       }else{\r\n        return  array.map((value,index)=>{\r\n            return (\r\n                <button\r\n                style={setStyle(value)}\r\n                key={index}\r\n                className={styles.button_control}\r\n                onClick={() => handleOnClick(value,index)}>\r\n                    {value}\r\n                </button>\r\n            )\r\n        })\r\n       } \r\n      \r\n    }\r\n    return (\r\n    <div className={className}>\r\n        <div className={styles.title}>\r\n           <span>border-style: </span>\r\n           {element_title()}\r\n        </div>\r\n        <div className={styles.title}>\r\n            <button className={styles.bt} onClick={()=>handleOnClickType(true)}>Default</button>    \r\n            <button className={styles.bt} onClick={()=>handleOnClickType(false)}>Multiples</button>    \r\n        </div>\r\n        <div className={styles.content}>\r\n           {element_Style()}\r\n        </div>\r\n    </div>\r\n    )\r\n   },[border_style,className])\r\n   \r\n}\r\n\r\nexport default React.memo(ContentBorderStyle)","import React ,{useContext} from 'react'\r\nimport styles from '../styles/Reset.module.scss'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nimport { ServiceContext } from '../contexts/ServiceContextProvider'\r\n\r\nconst Reset = (props) => {\r\n\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.button:styles.button_black\r\n\r\n    \r\n    const {resetValue} = useContext(ServiceContext);\r\n\r\n    const defaultValue = {\r\n        color:'black',\r\n        size: 1,\r\n        border : {\r\n             border_width : 1,\r\n             border_color : 'black',\r\n             border_style :  {\r\n                  isCategory : true,\r\n                  default: 'solid',\r\n                  multiples : [  \r\n                  'solid' ,\r\n                  'double' ,\r\n                  'none' ,\r\n                  'hidden' ,],\r\n             }\r\n        },\r\n        text_align : 'left'\r\n    }\r\n\r\n    const handleOnClick = () =>{\r\n        resetValue(defaultValue);\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <button  className={className}  onClick={()=>handleOnClick()}>\r\n                    <span>Reset</span>\r\n                </button>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Reset","import React, { useContext, useMemo, useRef } from 'react'\r\nimport styles from '../styles/ResultTable.module.scss'\r\nimport {ServiceContext} from '../contexts/ServiceContextProvider'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nconst ResultTable = () => {\r\n \r\nconst {valueDefault} = useContext(ServiceContext)\r\nconst refs = useRef();\r\n\r\nconst {Theme} = useContext(ThemeContext);\r\nconst {isTheme} = Theme;\r\nconst className = isTheme?styles.bt_coppy_clipboard:styles.bt_coppy_clipboard_black\r\n\r\n\r\nreturn useMemo(()=>{\r\n     \r\n let element = () => {\r\n    if(valueDefault.border.border_style.isCategory){\r\n        return (\r\n           <div className={styles.property}>border : \r\n               <span className={styles.value}> {valueDefault.border.border_width}px</span>\r\n               <span className={styles.value}> {valueDefault.border.border_color}</span>\r\n               <span className={styles.value}> {valueDefault.border.border_style.default}</span>;\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n       <div>  \r\n           <div className={styles.property}>border-width : \r\n               <span className={styles.value}> {valueDefault.border.border_width}px;</span>\r\n           </div>\r\n           <div className={styles.property}> border-color : \r\n               <span className={styles.value}> {valueDefault.border.border_color};</span>\r\n           </div>\r\n           <div className = {styles.property}>border-style : \r\n           {valueDefault.border.border_style.multiples.map((value,index)=>{\r\n               return <span key={index} className={styles.value}> {value}</span>\r\n           })};\r\n           </div>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst punctuation = '{';\r\nconst punctuation_reverse = '}';\r\n   \r\n\r\nconst handleOnclick = () => {\r\n\r\n       if(document.selection){\r\n        var range = document.body.createTextRange();\r\n        range.moveToElementText(document.getElementById(\"dom\"));\r\n        range.select().createTextRange();\r\n        document.execCommand(\"copy\");\r\n       }else if(window.getSelection){\r\n            var range = document.createRange();\r\n            range.selectNode(document.getElementById(\"dom\"))\r\n            window.getSelection().removeAllRanges()\r\n            window.getSelection().addRange(range);\r\n            document.execCommand(\"copy\");\r\n            window.getSelection().removeAllRanges();\r\n       }\r\n      \r\n\r\n}\r\n   return (\r\n      <div className={styles.col_12}>\r\n       <div id=\"dom\" ref={refs} className={styles.content}>\r\n           <span>.className{punctuation}</span>\r\n           <div className={styles.pd_5}>\r\n               <div className={styles.property}>color : \r\n                   <span className={styles.value}>{valueDefault.color};</span>\r\n               </div>\r\n               <div className={styles.property}>size : \r\n                   <span className={styles.value}>{valueDefault.size}rem;</span>\r\n               </div>\r\n               {element()}\r\n               <div className={styles.property}>text-align: \r\n                   <span className={styles.value}>{valueDefault.text_align};</span>\r\n               </div>\r\n           </div>\r\n           <span>{punctuation_reverse}</span>\r\n       </div>\r\n        <button className={className} onClick={()=> handleOnclick()}>coppy to Clipboard</button>\r\n    </div>  \r\n   )\r\n},[valueDefault,className])\r\n\r\n}\r\n\r\n\r\nexport default ResultTable","import React, { useState , useContext } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSun , faMoon } from '@fortawesome/free-solid-svg-icons'\r\nimport { ThemeContext } from '../contexts/ThemeContextProvider'\r\nconst ToggleTheme = () =>{\r\n    const {onSetTheme} = useContext(ThemeContext);\r\n    const [value,setValue] = useState(0);    \r\n    const handleOnChange = (e) =>{\r\n        setValue(e.target.value)\r\n        onSetTheme();\r\n    }\r\n    return (\r\n        <div\r\n        >\r\n            <FontAwesomeIcon style={{verticalAlign:0}} icon={faSun} size=\"1x\" color=\"white\" />\r\n            <input \r\n            type=\"range\"\r\n            max=\"100\" value={value} step=\"100\"\r\n            onChange={handleOnChange}\r\n            />  \r\n           <FontAwesomeIcon style={{verticalAlign:0}} icon={faMoon} size=\"1x\" color=\"white\" />\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default ToggleTheme","import React from 'react'\r\nimport ContentBorderColor from './ContentBorderColor'\r\nimport ContentBorderSize from './ContentBorderSize'\r\nimport ContentBorderStyle from './ContentBorderStyle'\r\nimport ContentColor from './ContentColor'\r\nimport ContentTextAlign from './ContentTextAlign'\r\nimport ContentSize from './ContentSize'\r\nimport Reset from './Reset'\r\nimport styles from '../styles/DashBoard.module.scss'\r\nconst Dashboard = () =>{\r\n    return (\r\n        <div>\r\n              <div className={styles.row} >\r\n                        <div className={styles.col_6}>\r\n                            <ContentColor />\r\n                        </div>\r\n                        <div className={styles.col_6}>\r\n                            <ContentBorderColor />\r\n                        </div>\r\n                </div>\r\n                <div className={styles.row}>\r\n                        <div className={styles.col_3}>\r\n                            <ContentSize />\r\n                        </div>\r\n                        <div className={styles.col_3}>\r\n                            <ContentTextAlign />\r\n                        </div>\r\n                        <div className={styles.col_3}>\r\n                            <ContentBorderSize  /> \r\n                        </div>\r\n                        <div className={styles.col_3}>\r\n                            <ContentBorderStyle />\r\n                    </div>\r\n                </div>\r\n                <div  className={styles.row_center}>\r\n                    <Reset />\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard ","import React , {useRef , useState,useEffect, useContext} from 'react'\r\nimport styles from '../styles/MyApp.module.scss'\r\nimport ContentColor from './ContentColor';\r\nimport DisplayBoard from './DisplayBoard';\r\nimport ContentBorderColor from './ContentBorderColor';\r\nimport ContentSize from './ContentSize';\r\nimport ContentBorderSize from './ContentBorderSize';\r\nimport ContentTextAlign from './ContentTextAlign';\r\nimport ContentBorderStyle from './ContentBorderStyle';\r\nimport Reset from './Reset';\r\nimport ResultTable from './ResultTable';\r\nimport ToggleTheme from './ToggleTheme';\r\nimport  { ThemeContext } from '../contexts/ThemeContextProvider';\r\nimport  ServiceContextProvider from '../contexts/ServiceContextProvider';\r\nimport { isNullableTypeAnnotation } from '@babel/types';\r\nimport Dashboard from './DashBoard';\r\n\r\nconst MyApp = () => {\r\n    const {Theme} = useContext(ThemeContext);\r\n    const {isTheme} = Theme;\r\n    const className = isTheme?styles.myApp:styles.myApp_black;\r\n\r\n    const reftop = useRef(null)\r\n    const refBox = useRef(null);\r\n    const refDashBoard = useRef(null)\r\n    const refDragBar_1 = useRef(null);\r\n    const refDragBar_2 = useRef(null);\r\n    const refDisplayBoard = useRef(null);\r\n    const [clientHeightRowFirst,setClientHeightRowFirst] = useState(0);\r\n    const [clientHeightRowSecond,setClientHeightRowSecond] = useState(0);\r\n    const [clientHeightRowThirst,setClientHeightRowThirst] = useState(0);\r\n    const [clientMaxHeightRowTop,setClientMaxHeightRowTop] = useState(0);\r\n    const [isDragBarFirst,setIsDragBarFirst] = useState(false);\r\n    const [isDragBarSecond,setIsDragBarSecond] = useState(false);\r\n    const [cursor,SetCursor] = useState(\"auto\");\r\n\r\n    const handleOnMouseDown = (isDragBar) => {\r\n    switch(isDragBar){\r\n        case 1 : {\r\n        setIsDragBarFirst(true);\r\n        break;\r\n        }\r\n        case 2 : {\r\n        setIsDragBarSecond(true);\r\n        break;\r\n        }\r\n        default : {\r\n        break;\r\n        }\r\n    }\r\n    }\r\n\r\n\r\n    const endDrag = () => {\r\n        setIsDragBarFirst(false);\r\n        setIsDragBarSecond(false);\r\n        window.removeEventListener('mousemove',onDrag)\r\n        SetCursor(\"auto\")\r\n        }\r\n\r\n    const onDrag = (e) => {\r\n    \r\n    if(isDragBarFirst){\r\n        const heightRowSecond = reftop.current.clientHeight - e.clientY ;\r\n        const heightRowFirst = e.clientY - refDragBar_1.current.clientHeight;\r\n        if(heightRowSecond > 0 && heightRowFirst > 0){    \r\n        setClientHeightRowFirst(heightRowFirst)\r\n        setClientHeightRowSecond(heightRowSecond);\r\n        setClientHeightRowThirst(refDisplayBoard.current.clientHeight)    \r\n        SetCursor(\"n-resize\")\r\n        e.preventDefault();\r\n        }\r\n    }\r\n    else if(isDragBarSecond){\r\n        let heightRowSecond =  e.clientY - refDashBoard.current.clientHeight -  refDragBar_1.current.clientHeight -  refDragBar_2.current.clientHeight;\r\n        let heightMaxRowTop = e.clientY - 15;\r\n        let heightRowThirst = refBox.current.clientHeight  - e.clientY - 15 ;\r\n        if(heightRowSecond >0 && heightRowThirst >0){\r\n        setClientHeightRowSecond(heightRowSecond);\r\n        setClientMaxHeightRowTop(heightMaxRowTop)\r\n        setClientHeightRowThirst(heightRowThirst);\r\n        e.preventDefault();\r\n        }\r\n    }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n      const run = () =>{\r\n        window.addEventListener('mousemove',onDrag)\r\n        window.addEventListener('mouseup',endDrag)\r\n      }\r\n      run();\r\n    return () => {\r\n        window.removeEventListener('mouseup',endDrag)      \r\n        window.removeEventListener('mousemove',onDrag)\r\n        }\r\n    },[isDragBarFirst, isDragBarSecond])\r\n\r\n    console.log(\"render MyApp\");\r\n    return (\r\n        <ServiceContextProvider>\r\n        <div className={className}>\r\n        <div\r\n        ref={refBox}\r\n        style = {\r\n            {\r\n            cursor : cursor,\r\n            }\r\n        }\r\n        className={styles.box_resize}>\r\n        <div\r\n            ref={reftop}\r\n            style={{\r\n            maxHeight:clientMaxHeightRowTop === 0?null:clientMaxHeightRowTop,\r\n            }}\r\n            className={styles.rowtop}\r\n        >\r\n            <div \r\n                ref={refDashBoard}\r\n                style={{\r\n                    height: clientHeightRowFirst === 0?isNullableTypeAnnotation:clientHeightRowFirst+\"px\",\r\n                }}\r\n                className={styles.dashboard}>\r\n            <div\r\n                style={{\r\n                height:  clientHeightRowFirst === 0?null:clientHeightRowFirst+\"px\",\r\n                }}\r\n                className={styles.container}\r\n            >\r\n                <Dashboard/>\r\n              </div>  \r\n            </div> \r\n            <div \r\n                ref={refDragBar_1}\r\n                onMouseDown={() => handleOnMouseDown(1)} \r\n                className={styles.dragbar_height_1}></div>\r\n            <div \r\n                style={{\r\n                    height: clientHeightRowSecond === 0?null:clientHeightRowSecond+\"px\",\r\n                }}\r\n                className={styles.result_table}>\r\n                <div\r\n                style={{\r\n                height:  clientHeightRowSecond === 0?null:clientHeightRowSecond+\"px\",\r\n                }}\r\n                className={styles.container}\r\n                >\r\n                <div \r\n                    className={styles.row}>\r\n                    <ResultTable   />\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>  \r\n            <div\r\n            ref={refDragBar_2}\r\n            onMouseDown={() => handleOnMouseDown(2)} \r\n            className = {styles.dragbar_height_2}\r\n            >\r\n            </div>   \r\n            <div\r\n            ref={refDisplayBoard} \r\n            style={{\r\n                height:clientHeightRowThirst === 0?null:clientHeightRowThirst+'px',\r\n            }}\r\n            className={styles.display_board}>\r\n                <div\r\n                style={{\r\n                    height:clientHeightRowThirst === 0?150:clientHeightRowThirst+'px',\r\n                }}\r\n                className={styles.container}\r\n                >\r\n                <div className={styles.row}>\r\n                    <DisplayBoard />\r\n                </div>\r\n                </div>\r\n            </div> \r\n        </div> \r\n        <div className={styles.service}>\r\n            <div className={styles.col}>\r\n            <ToggleTheme/>\r\n            </div>\r\n        </div>\r\n        </div>  \r\n        </ServiceContextProvider>\r\n    );\r\n}\r\n\r\nexport default MyApp","import React  from 'react'\nimport MyApp from './components/MyApp';\nimport ThemeContextProvider from './contexts/ThemeContextProvider';\n\nfunction App() {\n      return (\n       <ThemeContextProvider>\n          <MyApp/>\n       </ThemeContextProvider> \n      )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel_black\":\"ContentSize_pannel_black__366k1\",\"title\":\"ContentSize_title__g0v7U\",\"content\":\"ContentSize_content__g1smy\",\"button_control\":\"ContentSize_button_control__2OHOl\",\"pannel\":\"ContentSize_pannel__2e0tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel_black\":\"ContentBorderSize_pannel_black__3lxKr\",\"title\":\"ContentBorderSize_title__2IJ2w\",\"content\":\"ContentBorderSize_content__2gK0t\",\"button_control\":\"ContentBorderSize_button_control__Axgha\",\"pannel\":\"ContentBorderSize_pannel__3i31u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel_black\":\"ContentColor_pannel_black__3wGu5\",\"title\":\"ContentColor_title__ecJfB\",\"content\":\"ContentColor_content__1T9eC\",\"button_color\":\"ContentColor_button_color__1m9Sz\",\"pannel\":\"ContentColor_pannel__1j0n6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel_black\":\"ContentBorderColor_pannel_black__1AfAK\",\"title\":\"ContentBorderColor_title__nDa6l\",\"content\":\"ContentBorderColor_content__-ljr0\",\"button_color\":\"ContentBorderColor_button_color__1aW_P\",\"pannel\":\"ContentBorderColor_pannel__J3c93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel_black\":\"ContentTextAlign_pannel_black__1F5MP\",\"title\":\"ContentTextAlign_title__2TQOS\",\"content\":\"ContentTextAlign_content__1uiAT\",\"button_control\":\"ContentTextAlign_button_control__ifk-H\",\"pannel\":\"ContentTextAlign_pannel__2_kmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pannel\":\"Result_pannel__2EwrN\",\"title\":\"Result_title__au-t6\",\"content\":\"Result_content__10SmA\",\"mr_5\":\"Result_mr_5__ijeur\",\"property\":\"Result_property__3VBK-\",\"value\":\"Result_value__3uieD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_black\":\"Reset_button_black__2n0a0\",\"button\":\"Reset_button__3J1dT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ResultTable_content__1KmiH\",\"pd_5\":\"ResultTable_pd_5__30i8p\",\"property\":\"ResultTable_property__2g_99\",\"value\":\"ResultTable_value__9rnsj\",\"bt_coppy_clipboard\":\"ResultTable_bt_coppy_clipboard__3JILV\",\"bt_coppy_clipboard_black\":\"ResultTable_bt_coppy_clipboard_black__3upHr\",\"col_12\":\"ResultTable_col_12__3Uk0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myApp_black\":\"MyApp_myApp_black__15s6X\",\"container\":\"MyApp_container__3W94p\",\"box_resize\":\"MyApp_box_resize__2tTit\",\"rowtop\":\"MyApp_rowtop__1RfWx\",\"dashboard\":\"MyApp_dashboard__2IGZv\",\"dragbar_height_1\":\"MyApp_dragbar_height_1__29QTN\",\"result_table\":\"MyApp_result_table__3xPDJ\",\"dragbar_height_2\":\"MyApp_dragbar_height_2__xnI52\",\"display_board\":\"MyApp_display_board__RQj2Q\",\"service\":\"MyApp_service__1OzFc\",\"myApp\":\"MyApp_myApp__87PJ9\",\"row\":\"MyApp_row__2veXV\",\"row_center\":\"MyApp_row_center__1VXG-\",\"col_6\":\"MyApp_col_6__1mf8W\",\"col_4\":\"MyApp_col_4__rfSYC\",\"col_3\":\"MyApp_col_3__1N2KU\",\"col\":\"MyApp_col__3f_HD\"};"],"sourceRoot":""}